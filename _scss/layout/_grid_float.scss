@if ($grid-type != 'flexbox') {

/*doc
---
title: .#{$p}row
name: l-4-row
category: layout
---

floatによるグリッドのグループを作成する。

*/

/*doc
---
title: .#{$p}col-(column)-(breakpoint)
name: l-4-row-1-col
category: layout
parent: l-4-row
---

floatによるグリッドのセルを作成する。

### 一般的なグリッド

``` example
<div class="#{$p}row">
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-first #{$prefix}#{$u}bg-mild">#{$p}col #{$p}col-4</div>
    </div>
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-first #{$prefix}#{$u}bg-mild">#{$p}col #{$p}col-4</div>
    </div>
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-first #{$prefix}#{$u}bg-mild">#{$p}col #{$p}col-4</div>
    </div>
</div>
```

### デバイスによって変化するグリッド

スマートフォン(default), タブレット以上(sm), XGA以上(lg)でレイアウトを変更する代表的な例。

``` example
<div class="#{$p}row">
    <div class="#{$p}col #{$p}col-12 #{$p}col-6-sm #{$p}col-4-lg">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-first #{$prefix}#{$u}bg-mild">#{$p}col #{$p}col-12 #{$p}col-6-sm #{$p}col-4-lg</div>
    </div>
    <div class="#{$p}col #{$p}col-12 #{$p}col-6-sm #{$p}col-4-lg">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-first #{$prefix}#{$u}bg-mild">#{$p}col #{$p}col-12 #{$p}col-6-sm #{$p}col-4-lg</div>
    </div>
    <div class="#{$p}col #{$p}col-12 #{$p}col-6-sm #{$p}col-4-lg">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-first #{$prefix}#{$u}bg-mild">#{$p}col #{$p}col-12 #{$p}col-6-sm #{$p}col-4-lg</div>
    </div>
</div>
```

iPhone SE(default), iPhone 7(xs), iPhone 7 Plus(sm)間でもレイアウトを変更できる。

``` example
<div class="#{$p}row">
    <div class="#{$p}col #{$p}col-12 #{$p}col-6-xs #{$p}col-4-sm">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-third #{$prefix}#{$u}bg-mild">#{$p}col #{$p}col-12 #{$p}col-6-xs #{$p}col-4-sm</div>
    </div>
    <div class="#{$p}col #{$p}col-12 #{$p}col-6-xs #{$p}col-4-sm">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-third #{$prefix}#{$u}bg-mild">#{$p}col #{$p}col-12 #{$p}col-6-xs #{$p}col-4-sm</div>
    </div>
    <div class="#{$p}col #{$p}col-12 #{$p}col-6-xs #{$p}col-4-sm">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-third #{$prefix}#{$u}bg-mild">#{$p}col #{$p}col-12 #{$p}col-6-xs #{$p}col-4-sm</div>
    </div>
</div>
```

*/

@include make-grid-columns();

.#{$p}row {
    @include make-row();
    .#{$p}col {
        padding-left: (map-get($grid-gutter-widths, md) / 2);
        padding-right: (map-get($grid-gutter-widths, md) / 2);
    }
}


/*doc
---
title: .#{$p}row-(0 or size)
name: l-4-row-2-size
category: layout
parent: l-4-row
---

floatによるグリッドで余白が異なるグループを作成する。

``` example
<div class="#{$p}row #{$p}row-0">
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-second #{$prefix}#{$u}bg-mild">#{$p}row #{$p}row-0</div>
    </div>
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-second #{$prefix}#{$u}bg-mild" style="opacity: 0.8;">#{$p}row #{$p}row-0</div>
    </div>
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-second #{$prefix}#{$u}bg-mild">#{$p}row #{$p}row-0</div>
    </div>
</div>

<div class="#{$p}row #{$p}row-sm">
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-third #{$prefix}#{$u}bg-mild">#{$p}row #{$p}row-sm</div>
    </div>
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-third #{$prefix}#{$u}bg-mild">#{$p}row #{$p}row-sm</div>
    </div>
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-third #{$prefix}#{$u}bg-mild">#{$p}row #{$p}row-sm</div>
    </div>
</div>

<div class="#{$p}row #{$p}row-lg">
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-important #{$prefix}#{$u}bg-mild">#{$p}row #{$p}row-lg</div>
    </div>
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-important #{$prefix}#{$u}bg-mild">#{$p}row #{$p}row-lg</div>
    </div>
    <div class="#{$p}col #{$p}col-4">
        <div class="#{$prefix}#{$u}m-b #{$prefix}#{$u}p-sm #{$prefix}#{$u}bg-important #{$prefix}#{$u}bg-mild">#{$p}row #{$p}row-lg</div>
    </div>
</div>
```
*/

.#{$p}row-0 {
    @include make-row( $gutter: 0 );
    .#{$p}col {
        padding-left: 0;
        padding-right: 0;
    }
}

.#{$p}row-sm {
    @include make-row( $gutter: map-get($grid-gutter-widths, sm) );
    .#{$p}col {
        padding-left: (map-get($grid-gutter-widths, sm) / 2);
        padding-right: (map-get($grid-gutter-widths, sm) / 2);
    }
}

.#{$p}row-lg {
    @include make-row( $gutter: map-get($grid-gutter-widths, lg) );
    .#{$p}col {
        padding-left: (map-get($grid-gutter-widths, lg) / 2);
        padding-right: (map-get($grid-gutter-widths, lg) / 2);
    }
}

}

