@mixin make-row-flex() {
  display: flex;
  flex-wrap: wrap;
}

@mixin make-col-flex($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  max-width: percentage($size / $columns);
}

@mixin make-col-offset-flex($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}

@mixin make-grid-columns-flex($columns: $grid-columns, $breakpoints: $grid-breakpoints) {
  %grid-column {
    position: relative;
    width: 100%;
    min-height: 1px;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @for $i from 1 through $columns {
      @if ($optimize != true) or ( ($optimize == true) and ( $i > 1 ) and ( $i < 11 ) ) {
        .#{$p}#{$g}col#{$infix}-#{$i} {
          @extend %grid-column;
        }
      }
    }
    .#{$p}#{$g}col#{$infix},
    .#{$p}#{$g}col#{$infix}-auto {
      @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      .#{$p}#{$g}col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }

// 内容文字列が長いとグリッドが崩れるため、このフレームワークでは使用していない
// It is not used in this framework. Because the grid collapses if the content string is long.
//
//      .#{$p}#{$g}col#{$infix}-auto {
//        flex: 0 0 auto;
//        width: auto;
//        max-width: none;
//      }

      @for $i from 1 through $columns {
        @if ($optimize != true) or ( ($optimize == true) and ( $i > 1 ) and ( $i < 11 ) ) {
          .#{$p}#{$g}col#{$infix}-#{$i} {
            @include make-col-flex($i, $columns);
          }
        }
      }

      @if ($disabled-grid-order-offset != true) {

        .#{$p}#{$g}order#{$infix}-first { order: -1; }

        .#{$p}#{$g}order#{$infix}-last { order: $columns + 1; }

        @for $i from 0 through $columns {
          .#{$p}#{$g}order#{$infix}-#{$i} { order: $i; }
        }

        @for $i from 0 through ($columns - 1) {
          @if not ($infix == "" and $i == 0) {
            .#{$p}#{$g}offset#{$infix}-#{$i} {
              @include make-col-offset-flex($i, $columns);
            }
          }
        }

      }

    }
  }
}
